<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Enemy_P_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = global.max_soldier_hp;
can_see = false; //to spot player
timer = 40;
path_start(path7, 2, path_action_continue, true);





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction;
/*
//set Cone

coneOfSightLeft = 45;
coneOfSightRight = -45;
coneLeft = (image_angle+coneOfSightLeft) mod 360;
coneRight = (image_angle+coneOfSightRight+360) mod 360;
    
coneOfSightLength = 100; // Change to whatever.
draw_triangle(x, y, x+lengthdir_x(coneOfSightLength,coneLeft), y+lengthdir_y(coneOfSightLength,coneLeft), x+lengthdir_x(coneOfSightLength,coneRight), y+lengthdir_y(coneOfSightLength,coneRight), true);


//cone of vision
var inst = instance_nearest(x, y, Player);
if instance_exists(inst)
{
     
   if ( point_in_triangle(inst.x, inst.y, x, y, x+lengthdir_x(coneOfSightLength,coneLeft), y+lengthdir_y(coneOfSightLength,coneLeft), x+lengthdir_x(coneOfSightLength,coneRight), y+lengthdir_y(coneOfSightLength,coneRight) ))
   {
      can_see = true;
      global.alert = true; //all enemies aware
   }
}*/


//if alert true 
//enemy shoots
//if alert true but can_see false
//enemy moves to last spotted position and looks again


//movement
//
//
timer -= 1;

    if(timer == 0)
    {
        timer = 40
    }
    
    //PISTOL SPRITES
    if(global.pistol == true )
    {
         if(timer &lt; 40 &amp;&amp; timer &gt; 30)
         {
            sprite_index = Enemy_P_R
            draw_sprite(Enemy_P_R, 0, x, y)
        }
        else if(timer &lt; 30 &amp;&amp; timer &gt; 20 )
        {
            sprite_index = Enemy_P_idle
            draw_sprite(Enemy_P_idle, 0, x, y)
        }
        else if(timer &lt; 20 &amp;&amp; timer &gt; 10)
        {
             sprite_index =  Enemy_P_L
            draw_sprite(Enemy_P_L, 0, x, y)
        }
        else
        {
              sprite_index = Enemy_P_idle
              draw_sprite(Enemy_P_idle, 0, x, y)
        }
    }
    
//ALERTED

//if(glboal.alert == true)
//{
    //walk towards player and shoot
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
